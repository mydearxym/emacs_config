;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(Info-fontify-angle-bracketed-flag nil)
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.5)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(beacon-blink-delay 0.3)
 '(beacon-blink-when-window-scrolls nil)
 '(beacon-mode t)
 '(cfs--current-profile-name "profile1" t)
 '(company-dabbrev-minimum-length 3)
 '(company-dabbrev-other-buffers nil)
 '(company-show-numbers t)
 '(company-statistics-auto-restore nil)
 '(ctags-update-delay-seconds 1024)
 '(erc-nick "zilongshanren")
 '(erc-port 6666)
 '(evil-want-C-i-jump t)
 '(exec-path-from-shell-arguments (quote ("-l")))
 '(expand-region-contract-fast-key "V")
 '(expand-region-exclude-text-mode-expansions (quote (html-mode nxml-mode web-mode)))
 '(expand-region-reset-fast-key "r")
 '(flycheck-display-errors-delay 0.4)
 '(global-command-log-mode nil)
 '(global-highlight-parentheses-mode nil)
 '(golden-ratio-exclude-modes
   (quote
    ("bs-mode" "calc-mode" "ediff-mode" "dired-mode" "gud-mode" "gdb-locals-mode" "gdb-registers-mode" "gdb-breakpoints-mode" "gdb-threads-mode" "gdb-frames-mode" "gdb-inferior-io-mode" "gud-mode" "gdb-inferior-io-mode" "gdb-disassembly-mode" "gdb-memory-mode" "restclient-mode" "speedbar-mode" term-mode)))
 '(helm-ag-always-set-extra-option nil)
 '(helm-ag-show-status-function (quote spaceline--helm-ag-update))
 '(helm-always-two-windows t)
 '(helm-bookmark-show-location t t)
 '(helm-descbinds-mode t)
 '(helm-descbinds-window-style (quote split))
 '(helm-display-function (quote spacemacs//display-helm-window))
 '(helm-display-header-line nil)
 '(helm-echo-input-in-header-line t)
 '(helm-ff-skip-boring-files t)
 '(helm-flx-for-helm-find-files nil)
 '(helm-flx-mode t)
 '(helm-fuzzy-matching-highlight-fn (quote helm-flx-fuzzy-highlight-match))
 '(helm-fuzzy-sort-fn (quote helm-flx-fuzzy-matching-sort))
 '(helm-gtags-update-interval-second 35)
 '(helm-input-idle-delay 0.2)
 '(helm-locate-command "mdfind -name %s %s")
 '(helm-ls-git-fuzzy-match t)
 '(helm-ls-git-show-abs-or-relative (quote absolute))
 '(helm-mode t)
 '(helm-split-window-in-side-p t)
 '(helm-split-window-inside-p t)
 '(hl-paren-background-colors nil)
 '(hl-paren-colors nil t)
 '(hl-paren-delay 0.5 t)
 '(ivy-height 18)
 '(linum-eager nil)
 '(linum-relative-global-mode t)
 '(lua-documentation-url "http://www.lua.org/manual/5.3/manual.html")
 '(magit-use-overlays nil)
 '(org-agenda-custom-commands nil)
 '(org-agenda-ndays 1)
 '(org-agenda-show-all-dates t)
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-deadline-prewarning-if-scheduled t)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-agenda-start-on-weekday nil)
 '(org-agenda-text-search-extra-files (quote (agenda-archives)))
 '(org-deadline-warning-days 14)
 '(org-fast-tag-selection-single-key (quote expert))
 '(org-log-into-drawer t)
 '(org-pomodoro-play-sounds nil)
 '(org-reverse-note-order t)
 '(package-selected-packages
   (quote
    (dired-ranger ranger ac-alchemist spaceline smartparens prodigy paradox origami orgit org-projectile org-category-capture org-pomodoro zoutline link-hint ivy-hydra ibuffer-projectile helm-flx helm-company gruvbox-theme github-search flyspell-correct-ivy flyspell-correct-helm flycheck-mix evil-magit evil-escape evil-ediff dumb-jump darktooth-theme autothemer counsel swiper color-identifiers-mode auto-compile alchemist ace-window ace-link evil magit-popup git-commit ghub let-alist with-editor marshal ht helm helm-core skewer-mode flycheck pkg-info zenburn-theme yaml-mode which-key ujelly-theme toc-org tao-theme tango-plus-theme powerline smeargle seti-theme restart-emacs planet-theme phoenix-dark-pink-theme phoenix-dark-mono-theme persp-mode pcre2el organic-green-theme omtose-phellack-theme obsidian-theme org-plus-contrib noctilux-theme mustang-theme moe-theme mmm-mode markdown-mode js2-mode jbeans-theme jazz-theme inkpot-theme projectile htmlize hl-todo gruber-darker-theme grandshell-theme gotham-theme flyspell-correct espresso-theme erlang dracula-theme diminish darkokai-theme darkburn-theme dakrone-theme cyberpunk-theme ivy column-enforce-mode color-theme-sanityinc-tomorrow clues-theme busybee-theme bind-map bind-key packed apropospriate-theme ample-theme alect-themes elixir-mode avy auto-complete yasnippet tern company iedit undo-tree haml-mode sublime-themes white-sand-theme rebecca-theme org-mime exotica-theme rvm ruby-tools ruby-test-mode rubocop rspec-mode rbenv rake minitest chruby inf-ruby tide typescript-mode winum unfill madhat2r-theme fuzzy flycheck-credo nginx-mode counsel-projectile ob-elixir pug-mode osx-dictionary org hide-comnt stekene-theme jade-mode define-word colorsarenice-theme names visual-regexp-steroids visual-regexp tiny peep-dired find-file-in-project 4clojure nodejs-repl etags-select cmake-mode yapfify pytest py-isort powershell live-py-mode hy-mode anaconda-mode pythonic lispyville evil-lispy edn paredit queue peg json-rpc dash-functional web-completion-data makey anzu highlight goto-chg flx gh logito pcache pos-tip guide-key request parent-mode simple-httpd json-snatcher json-reformat multiple-cursors moz ctable orglue epic alert log4e gntp spinner epl hydra async deferred f s chinese-word-at-point dash youdao-dictionary ws-butler window-numbering web-mode web-beautify volatile-highlights vi-tilde-fringe use-package tagedit smooth-scrolling slim-mode scss-mode sass-mode rfringe reveal-in-finder rainbow-mode rainbow-identifiers rainbow-delimiters pyvenv pyenv-mode popwin pip-requirements persp-projectile pbcopy page-break-lines ox-reveal org-repo-todo org-present org-octopress org-mac-link org-download org-bullets open-junk-file neotree multi-term moz-controller move-text monokai-theme markdown-toc magit macrostep lispy linum-relative leuven-theme less-css-mode json-mode js2-refactor js-doc indent-guide impatient-mode ido-vertical-mode hungry-delete hl-anything highlight-parentheses highlight-numbers highlight-indentation helm-themes helm-swoop helm-pydoc helm-projectile helm-mode-manager helm-make helm-ls-git helm-gtags helm-gitignore helm-github-stars helm-flyspell helm-descbinds helm-css-scss helm-c-yasnippet helm-ag guide-key-tip google-translate golden-ratio github-browse-file gitconfig-mode gitattributes-mode git-timemachine git-messenger git-link gist gh-md ggtags geiser fringe-helper flycheck-ycmd flycheck-pos-tip flx-ido fill-column-indicator fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-tutor evil-terminal-cursor-changer evil-surround evil-search-highlight-persist evil-org evil-numbers evil-nerd-commenter evil-matchit evil-lisp-state evil-jumper evil-indent-textobject evil-iedit-state evil-exchange evil-args evil-anzu engine-mode emmet-mode elisp-slime-nav elfeed discover-my-major deft dash-at-point cython-mode company-ycmd company-web company-tern company-statistics company-quickhelp company-c-headers company-anaconda command-log-mode coffee-mode cmake-font-lock clj-refactor clean-aindent-mode clang-format cider-eval-sexp-fu chinese-fonts-setup buffer-move auto-yasnippet auto-highlight-symbol auto-dictionary align-cljlet aggressive-indent adaptive-wrap ace-jump-mode ac-ispell 2048-game)))
 '(paradox-github-token t)
 '(pyim-dicts
   (quote
    ((:name "BigDict-01" :file "/Users/guanghui/.emacs.d/pyim/dicts/pyim-bigdict.pyim" :coding utf-8-unix)
     (:name "BigDict-01" :file "/Users/guanghui/.emacs.d/.cache/pyim-bigdict.pyim" :coding utf-8-unix))))
 '(require-final-newline nil)
 '(ring-bell-function (quote ignore))
 '(safe-local-variable-values
   (quote
    ((eval setenv "PYTHONPATH" "/Users/guanghui/cocos2d-x/tools/cocos2d-console/plugins:/Users/guanghui/cocos2d-x/tools/cocos2d-console/bin"))))
 '(sp-show-pair-from-inside t)
 '(spaceline-helm-mode t)
 '(spaceline-info-mode t)
 '(tags-add-tables nil)
 '(tags-revert-without-query t)
 '(vc-follow-symlinks t)
 '(web-mode-markup-indent-offset 2)
 '(ycmd-extra-conf-handler (quote load))
 '(ycmd-extra-conf-whitelist (quote ("~/cocos2d-x/*"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ahs-definition-face ((t (:slant normal))))
 '(ahs-face ((t (:inherit nil :underline "#7f7f7f"))))
 '(ahs-plugin-bod-face ((t nil)))
 '(ahs-plugin-defalt-face ((t nil)))
 '(ahs-plugin-whole-buffer-face ((t nil)))
 '(buffer-menu-buffer ((t (:foreground "#C0C5CE"))))
 '(comint-highlight-input ((t (:foreground "wheat"))))
 '(company-echo-common ((t (:foreground "yellowgreen"))))
 '(company-preview ((t (:foreground "wheat"))))
 '(company-preview-common ((t (:foreground "yellowgreen"))))
 '(company-preview-search ((t (:inherit company-preview))))
 '(company-scrollbar-bg ((t (:background "#4F5B66"))))
 '(company-scrollbar-fg ((t (:background "#626F79"))))
 '(company-template-field ((t (:foreground "#00ABC6"))))
 '(company-tooltip ((t (:background "#333C46" :foreground "#708792"))))
 '(company-tooltip-annotation ((t (:foreground "#65878F"))))
 '(company-tooltip-annotation-selection ((t (:foreground "#9C8AA7" :weight bold))))
 '(company-tooltip-common ((t (:foreground "#6F8893"))))
 '(company-tooltip-common-selection ((t (:foreground "#9C8AA7"))))
 '(company-tooltip-search ((t (:foreground "forest green" :weight bold))))
 '(company-tooltip-selection ((t (:background "#524c56" :weight bold))))
 '(css-property ((t (:foreground "#D0B487"))))
 '(css-selector ((t (:foreground "dark sea green"))))
 '(elixir-atom-face ((t (:foreground "#4DCEAE"))))
 '(elixir-attribute-face ((t (:foreground "#E78573"))))
 '(eval-sexp-fu-flash-error ((t (:foreground "tomato" :weight bold))))
 '(evil-ex-info ((t (:foreground "tomato" :slant italic))))
 '(evil-ex-lazy-highlight ((t (:background "#333C46"))))
 '(evil-ex-substitute-matches ((t (:background "#333C46"))))
 '(evil-ex-substitute-replacement ((t (:foreground "tomato" :underline t))))
 '(evil-search-highlight-persist-highlight-face ((t (:background "#A35F77" :foreground "wheat"))))
 '(flycheck-fringe-error ((t (:foreground "orange red" :weight bold))))
 '(flycheck-fringe-warning ((t (:foreground "gold" :weight bold))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#55616b"))))
 '(font-lock-doc-face ((t (:foreground "#626F79"))))
 '(font-lock-function-name-face ((t (:foreground "#8CB4CC" :height 1.1))))
 '(font-lock-keyword-face ((t (:foreground "#9AB167"))))
 '(font-lock-string-face ((t (:foreground "#6B9C9A"))))
 '(font-lock-type-face ((t (:foreground "#B38EA4"))))
 '(font-lock-variable-name-face ((t (:foreground "#C29975"))))
 '(fringe ((t (:background "#354450" :foreground "#ffffff"))))
 '(git-commit-summary ((t (:foreground "wheat"))))
 '(git-gutter-fr:added ((t (:foreground "#859900" :weight bold :width extra-expanded))))
 '(helm-action ((t (:foreground "orange" :underline t))))
 '(helm-buffer-size ((t (:foreground "yellowgreen"))))
 '(helm-ff-directory ((t (:foreground "#6B9C9A" :height 1.1))))
 '(helm-ff-dirs ((t (:foreground "#B195AD"))))
 '(helm-ff-dotted-directory ((t (:foreground "dim gray"))))
 '(helm-ff-executable ((t (:foreground "light gray" :slant italic))))
 '(helm-ff-file ((t (:foreground "gray77"))))
 '(helm-ff-prefix ((t (:foreground "#94AF64"))))
 '(helm-grep-file ((t (:foreground "yellowgreen"))))
 '(helm-grep-match ((t (:foreground "wheat"))))
 '(helm-header-line-left-margin ((t (:background "olive drab" :foreground "gainsboro"))))
 '(helm-helper ((t nil)))
 '(helm-ls-git-modified-and-staged-face ((t (:foreground "dark cyan"))))
 '(helm-ls-git-modified-not-staged-face ((t (:foreground "dark cyan"))))
 '(helm-ls-git-renamed-modified-face ((t (:foreground "dark cyan"))))
 '(helm-match ((t (:foreground "wheat"))))
 '(helm-match-item ((t (:foreground "gold"))))
 '(helm-prefarg ((t (:foreground "yellowgreen"))))
 '(helm-selection ((t (:background "#393939" :distant-foreground "#8DB4C7" :underline t))))
 '(helm-separator ((t (:foreground "aquamarine"))))
 '(helm-source-header ((t (:height 0.1))))
 '(helm-visible-mark ((t (:background "yellowgreen" :foreground "black"))))
 '(hi-yellow ((t (:foreground "gray51"))))
 '(highlight-changes ((t (:underline "yellowgreen"))))
 '(highlight-changes-delete ((t (:foreground "tomato" :underline t))))
 '(highlight-numbers-number ((t (:foreground "medium purple" :slant italic))))
 '(hl-line ((t (:background "#333C46"))))
 '(hl-paren-face ((t nil)) t)
 '(hlt-property-highlight ((t (:foreground "wheat"))))
 '(ido-indicator ((t (:background "tomato" :foreground "wheat" :width condensed))))
 '(ido-vertical-match-face ((t (:inherit font-lock-variable-name-face :underline t))))
 '(iedit-occurrence ((t (:inherit cursor))))
 '(isearch ((t (:background "#a05f74" :foreground "wheat"))))
 '(ivy-current-match ((t (:background "#333C46" :foreground "yellowgreen" :underline t))))
 '(ivy-match-required-face ((t (:inherit minibuffer-prompt :foreground "tomato"))))
 '(link ((t (:foreground "#948871" :underline t))))
 '(linum ((t (:background "#354450" :foreground "#4a545d"))))
 '(linum-relative-current-face ((t (:inherit linum :background "#354450" :foreground "#70808e" :weight bold))))
 '(mc/cursor-bar-face ((t (:height 1))))
 '(mc/cursor-face ((t nil)))
 '(neo-dir-link-face ((t (:foreground "#6D9C9A"))))
 '(neo-file-link-face ((t (:foreground "#BBC0C9"))))
 '(popup-isearch-match ((t (:inherit default))))
 '(sp-pair-overlay-face ((t nil)))
 '(sp-show-pair-match-face ((t (:background "#4F5B66" :weight normal))))
 '(sp-show-pair-mismatch-face ((t (:background "#4F5B66"))))
 '(sp-wrap-overlay-opening-pair ((t (:foreground "cyan"))))
 '(speedbar-highlight-face ((t nil)))
 '(swiper-line-face ((t (:background "#333C46"))))
 '(swiper-match-face-2 ((t (:background "#4F5B66" :foreground "wheat"))))
 '(trailing-whitespace ((t (:background "tomato"))))
 '(vimish-fold-overlay ((t (:foreground "dark gray" :box (:line-width 2 :color "LightSkyBlue4")))))
 '(vr/match-separator-face ((t (:foreground "red"))))
 '(web-mode-constant-face ((t (:inherit font-lock-constant-face :foreground "tomato" :slant italic))))
 '(web-mode-function-call-face ((t (:foreground "#68B0B8" :height 1.0))))
 '(web-mode-function-name-face ((t (:foreground "#8DB6CD"))))
 '(web-mode-html-attr-name-face ((t (:foreground "#DEB887"))))
 '(web-mode-html-attr-value-face ((t (:foreground "#A0B98B"))))
 '(web-mode-html-tag-bracket-face ((t (:foreground "SteelBlue2"))))
 '(web-mode-html-tag-face ((t (:foreground "SteelBlue2"))))
 '(web-mode-javascript-string-face ((t (:foreground "#A3BE8C"))))
 '(web-mode-keyword-face ((t (:foreground "#b48ead"))))
 '(web-mode-variable-name-face ((t (:foreground "#D08770"))))
 '(which-key-command-description-face ((t (:foreground "burlywood"))))
 '(which-key-group-description-face ((t (:inherit font-lock-keyword-face :foreground "LightBlue4"))))
 '(which-key-highlighted-command-face ((t (:foreground "DarkSlateGray3" :underline t))))
 '(which-key-local-map-description-face ((t (:foreground "medium aquamarine"))))
 '(winum-face ((t (:background "#354450" :foreground "grey"))) t))
;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
